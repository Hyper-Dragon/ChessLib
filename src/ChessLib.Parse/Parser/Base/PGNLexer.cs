//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\PGN.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ChessLib.Parse.Parser.Base {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class PGNLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		BOL=1, WHITE_WINS=2, BLACK_WINS=3, DRAWN_GAME=4, REST_OF_LINE_COMMENT=5, 
		BRACE_COMMENT=6, ESCAPE=7, SPACES=8, STRING=9, INTEGER=10, PERIOD=11, 
		ASTERISK=12, LEFT_BRACKET=13, RIGHT_BRACKET=14, LEFT_PARENTHESIS=15, RIGHT_PARENTHESIS=16, 
		LEFT_ANGLE_BRACKET=17, RIGHT_ANGLE_BRACKET=18, NUMERIC_ANNOTATION_GLYPH=19, 
		SYMBOL=20, SUFFIX_ANNOTATION=21, UNEXPECTED_CHAR=22;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"BOL", "WHITE_WINS", "BLACK_WINS", "DRAWN_GAME", "REST_OF_LINE_COMMENT", 
		"BRACE_COMMENT", "ESCAPE", "SPACES", "STRING", "INTEGER", "PERIOD", "ASTERISK", 
		"LEFT_BRACKET", "RIGHT_BRACKET", "LEFT_PARENTHESIS", "RIGHT_PARENTHESIS", 
		"LEFT_ANGLE_BRACKET", "RIGHT_ANGLE_BRACKET", "NUMERIC_ANNOTATION_GLYPH", 
		"SYMBOL", "SUFFIX_ANNOTATION", "UNEXPECTED_CHAR"
	};


	public PGNLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PGNLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'1-0'", "'0-1'", "'1/2-1/2'", null, null, null, null, null, 
		null, "'.'", "'*'", "'['", "']'", "'('", "')'", "'<'", "'>'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "BOL", "WHITE_WINS", "BLACK_WINS", "DRAWN_GAME", "REST_OF_LINE_COMMENT", 
		"BRACE_COMMENT", "ESCAPE", "SPACES", "STRING", "INTEGER", "PERIOD", "ASTERISK", 
		"LEFT_BRACKET", "RIGHT_BRACKET", "LEFT_PARENTHESIS", "RIGHT_PARENTHESIS", 
		"LEFT_ANGLE_BRACKET", "RIGHT_ANGLE_BRACKET", "NUMERIC_ANNOTATION_GLYPH", 
		"SYMBOL", "SUFFIX_ANNOTATION", "UNEXPECTED_CHAR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PGN.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static PGNLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x18', '\xA0', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x3', '\x2', '\x6', 
		'\x2', '\x31', '\n', '\x2', '\r', '\x2', '\xE', '\x2', '\x32', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\a', '\x6', 'G', '\n', '\x6', '\f', 
		'\x6', '\xE', '\x6', 'J', '\v', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\a', '\x3', '\a', '\a', '\a', 'P', '\n', '\a', '\f', '\a', '\xE', '\a', 
		'S', '\v', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', 
		'\b', '\x5', '\b', 'Z', '\n', '\b', '\x3', '\b', '\x3', '\b', '\a', '\b', 
		'^', '\n', '\b', '\f', '\b', '\xE', '\b', '\x61', '\v', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\t', '\x6', '\t', '\x66', '\n', '\t', '\r', '\t', 
		'\xE', '\t', 'g', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\a', '\n', 'r', '\n', 
		'\n', '\f', '\n', '\xE', '\n', 'u', '\v', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\v', '\x6', '\v', 'z', '\n', '\v', '\r', '\v', '\xE', '\v', '{', 
		'\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x14', '\x3', '\x14', '\x6', '\x14', '\x90', '\n', '\x14', 
		'\r', '\x14', '\xE', '\x14', '\x91', '\x3', '\x15', '\x3', '\x15', '\a', 
		'\x15', '\x96', '\n', '\x15', '\f', '\x15', '\xE', '\x15', '\x99', '\v', 
		'\x15', '\x3', '\x16', '\x3', '\x16', '\x5', '\x16', '\x9D', '\n', '\x16', 
		'\x3', '\x17', '\x3', '\x17', '\x2', '\x2', '\x18', '\x3', '\x3', '\x5', 
		'\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', 
		'\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', 
		'\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', 
		'%', '\x14', '\'', '\x15', ')', '\x16', '+', '\x17', '-', '\x18', '\x3', 
		'\x2', '\v', '\x4', '\x2', '\f', '\f', '\xE', '\xF', '\x4', '\x2', '\f', 
		'\f', '\xF', '\xF', '\x3', '\x2', '\x7F', '\x7F', '\x5', '\x2', '\v', 
		'\f', '\xF', '\xF', '\"', '\"', '\x4', '\x2', '$', '$', '^', '^', '\x3', 
		'\x2', '\x32', ';', '\x5', '\x2', '\x32', ';', '\x43', '\\', '\x63', '|', 
		'\n', '\x2', '%', '%', '-', '-', '/', '/', '\x32', '<', '?', '?', '\x43', 
		'\\', '\x61', '\x61', '\x63', '|', '\x4', '\x2', '#', '#', '\x41', '\x41', 
		'\x2', '\xAC', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', 
		'\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x3', '\x30', '\x3', 
		'\x2', '\x2', '\x2', '\x5', '\x34', '\x3', '\x2', '\x2', '\x2', '\a', 
		'\x38', '\x3', '\x2', '\x2', '\x2', '\t', '<', '\x3', '\x2', '\x2', '\x2', 
		'\v', '\x44', '\x3', '\x2', '\x2', '\x2', '\r', 'M', '\x3', '\x2', '\x2', 
		'\x2', '\xF', 'Y', '\x3', '\x2', '\x2', '\x2', '\x11', '\x65', '\x3', 
		'\x2', '\x2', '\x2', '\x13', 'k', '\x3', '\x2', '\x2', '\x2', '\x15', 
		'y', '\x3', '\x2', '\x2', '\x2', '\x17', '}', '\x3', '\x2', '\x2', '\x2', 
		'\x19', '\x7F', '\x3', '\x2', '\x2', '\x2', '\x1B', '\x81', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', '\x83', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x85', 
		'\x3', '\x2', '\x2', '\x2', '!', '\x87', '\x3', '\x2', '\x2', '\x2', '#', 
		'\x89', '\x3', '\x2', '\x2', '\x2', '%', '\x8B', '\x3', '\x2', '\x2', 
		'\x2', '\'', '\x8D', '\x3', '\x2', '\x2', '\x2', ')', '\x93', '\x3', '\x2', 
		'\x2', '\x2', '+', '\x9A', '\x3', '\x2', '\x2', '\x2', '-', '\x9E', '\x3', 
		'\x2', '\x2', '\x2', '/', '\x31', '\t', '\x2', '\x2', '\x2', '\x30', '/', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\x32', '\x3', '\x2', '\x2', '\x2', 
		'\x32', '\x30', '\x3', '\x2', '\x2', '\x2', '\x32', '\x33', '\x3', '\x2', 
		'\x2', '\x2', '\x33', '\x4', '\x3', '\x2', '\x2', '\x2', '\x34', '\x35', 
		'\a', '\x33', '\x2', '\x2', '\x35', '\x36', '\a', '/', '\x2', '\x2', '\x36', 
		'\x37', '\a', '\x32', '\x2', '\x2', '\x37', '\x6', '\x3', '\x2', '\x2', 
		'\x2', '\x38', '\x39', '\a', '\x32', '\x2', '\x2', '\x39', ':', '\a', 
		'/', '\x2', '\x2', ':', ';', '\a', '\x33', '\x2', '\x2', ';', '\b', '\x3', 
		'\x2', '\x2', '\x2', '<', '=', '\a', '\x33', '\x2', '\x2', '=', '>', '\a', 
		'\x31', '\x2', '\x2', '>', '?', '\a', '\x34', '\x2', '\x2', '?', '@', 
		'\a', '/', '\x2', '\x2', '@', '\x41', '\a', '\x33', '\x2', '\x2', '\x41', 
		'\x42', '\a', '\x31', '\x2', '\x2', '\x42', '\x43', '\a', '\x34', '\x2', 
		'\x2', '\x43', '\n', '\x3', '\x2', '\x2', '\x2', '\x44', 'H', '\a', '=', 
		'\x2', '\x2', '\x45', 'G', '\n', '\x3', '\x2', '\x2', '\x46', '\x45', 
		'\x3', '\x2', '\x2', '\x2', 'G', 'J', '\x3', '\x2', '\x2', '\x2', 'H', 
		'\x46', '\x3', '\x2', '\x2', '\x2', 'H', 'I', '\x3', '\x2', '\x2', '\x2', 
		'I', 'K', '\x3', '\x2', '\x2', '\x2', 'J', 'H', '\x3', '\x2', '\x2', '\x2', 
		'K', 'L', '\b', '\x6', '\x2', '\x2', 'L', '\f', '\x3', '\x2', '\x2', '\x2', 
		'M', 'Q', '\a', '}', '\x2', '\x2', 'N', 'P', '\n', '\x4', '\x2', '\x2', 
		'O', 'N', '\x3', '\x2', '\x2', '\x2', 'P', 'S', '\x3', '\x2', '\x2', '\x2', 
		'Q', 'O', '\x3', '\x2', '\x2', '\x2', 'Q', 'R', '\x3', '\x2', '\x2', '\x2', 
		'R', 'T', '\x3', '\x2', '\x2', '\x2', 'S', 'Q', '\x3', '\x2', '\x2', '\x2', 
		'T', 'U', '\a', '\x7F', '\x2', '\x2', 'U', 'V', '\x3', '\x2', '\x2', '\x2', 
		'V', 'W', '\b', '\a', '\x2', '\x2', 'W', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'X', 'Z', '\x5', '\x3', '\x2', '\x2', 'Y', 'X', '\x3', '\x2', '\x2', '\x2', 
		'Y', 'Z', '\x3', '\x2', '\x2', '\x2', 'Z', '[', '\x3', '\x2', '\x2', '\x2', 
		'[', '_', '\a', '\'', '\x2', '\x2', '\\', '^', '\n', '\x3', '\x2', '\x2', 
		']', '\\', '\x3', '\x2', '\x2', '\x2', '^', '\x61', '\x3', '\x2', '\x2', 
		'\x2', '_', ']', '\x3', '\x2', '\x2', '\x2', '_', '`', '\x3', '\x2', '\x2', 
		'\x2', '`', '\x62', '\x3', '\x2', '\x2', '\x2', '\x61', '_', '\x3', '\x2', 
		'\x2', '\x2', '\x62', '\x63', '\b', '\b', '\x2', '\x2', '\x63', '\x10', 
		'\x3', '\x2', '\x2', '\x2', '\x64', '\x66', '\t', '\x5', '\x2', '\x2', 
		'\x65', '\x64', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', '\x3', '\x2', 
		'\x2', '\x2', 'g', '\x65', '\x3', '\x2', '\x2', '\x2', 'g', 'h', '\x3', 
		'\x2', '\x2', '\x2', 'h', 'i', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\b', 
		'\t', '\x2', '\x2', 'j', '\x12', '\x3', '\x2', '\x2', '\x2', 'k', 's', 
		'\a', '$', '\x2', '\x2', 'l', 'm', '\a', '^', '\x2', '\x2', 'm', 'r', 
		'\a', '^', '\x2', '\x2', 'n', 'o', '\a', '^', '\x2', '\x2', 'o', 'r', 
		'\a', '$', '\x2', '\x2', 'p', 'r', '\n', '\x6', '\x2', '\x2', 'q', 'l', 
		'\x3', '\x2', '\x2', '\x2', 'q', 'n', '\x3', '\x2', '\x2', '\x2', 'q', 
		'p', '\x3', '\x2', '\x2', '\x2', 'r', 'u', '\x3', '\x2', '\x2', '\x2', 
		's', 'q', '\x3', '\x2', '\x2', '\x2', 's', 't', '\x3', '\x2', '\x2', '\x2', 
		't', 'v', '\x3', '\x2', '\x2', '\x2', 'u', 's', '\x3', '\x2', '\x2', '\x2', 
		'v', 'w', '\a', '$', '\x2', '\x2', 'w', '\x14', '\x3', '\x2', '\x2', '\x2', 
		'x', 'z', '\t', '\a', '\x2', '\x2', 'y', 'x', '\x3', '\x2', '\x2', '\x2', 
		'z', '{', '\x3', '\x2', '\x2', '\x2', '{', 'y', '\x3', '\x2', '\x2', '\x2', 
		'{', '|', '\x3', '\x2', '\x2', '\x2', '|', '\x16', '\x3', '\x2', '\x2', 
		'\x2', '}', '~', '\a', '\x30', '\x2', '\x2', '~', '\x18', '\x3', '\x2', 
		'\x2', '\x2', '\x7F', '\x80', '\a', ',', '\x2', '\x2', '\x80', '\x1A', 
		'\x3', '\x2', '\x2', '\x2', '\x81', '\x82', '\a', ']', '\x2', '\x2', '\x82', 
		'\x1C', '\x3', '\x2', '\x2', '\x2', '\x83', '\x84', '\a', '_', '\x2', 
		'\x2', '\x84', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x85', '\x86', '\a', 
		'*', '\x2', '\x2', '\x86', ' ', '\x3', '\x2', '\x2', '\x2', '\x87', '\x88', 
		'\a', '+', '\x2', '\x2', '\x88', '\"', '\x3', '\x2', '\x2', '\x2', '\x89', 
		'\x8A', '\a', '>', '\x2', '\x2', '\x8A', '$', '\x3', '\x2', '\x2', '\x2', 
		'\x8B', '\x8C', '\a', '@', '\x2', '\x2', '\x8C', '&', '\x3', '\x2', '\x2', 
		'\x2', '\x8D', '\x8F', '\a', '&', '\x2', '\x2', '\x8E', '\x90', '\t', 
		'\a', '\x2', '\x2', '\x8F', '\x8E', '\x3', '\x2', '\x2', '\x2', '\x90', 
		'\x91', '\x3', '\x2', '\x2', '\x2', '\x91', '\x8F', '\x3', '\x2', '\x2', 
		'\x2', '\x91', '\x92', '\x3', '\x2', '\x2', '\x2', '\x92', '(', '\x3', 
		'\x2', '\x2', '\x2', '\x93', '\x97', '\t', '\b', '\x2', '\x2', '\x94', 
		'\x96', '\t', '\t', '\x2', '\x2', '\x95', '\x94', '\x3', '\x2', '\x2', 
		'\x2', '\x96', '\x99', '\x3', '\x2', '\x2', '\x2', '\x97', '\x95', '\x3', 
		'\x2', '\x2', '\x2', '\x97', '\x98', '\x3', '\x2', '\x2', '\x2', '\x98', 
		'*', '\x3', '\x2', '\x2', '\x2', '\x99', '\x97', '\x3', '\x2', '\x2', 
		'\x2', '\x9A', '\x9C', '\t', '\n', '\x2', '\x2', '\x9B', '\x9D', '\t', 
		'\n', '\x2', '\x2', '\x9C', '\x9B', '\x3', '\x2', '\x2', '\x2', '\x9C', 
		'\x9D', '\x3', '\x2', '\x2', '\x2', '\x9D', ',', '\x3', '\x2', '\x2', 
		'\x2', '\x9E', '\x9F', '\v', '\x2', '\x2', '\x2', '\x9F', '.', '\x3', 
		'\x2', '\x2', '\x2', '\xF', '\x2', '\x32', 'H', 'Q', 'Y', '_', 'g', 'q', 
		's', '{', '\x91', '\x97', '\x9C', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace ChessLib.Parse.Parser.Base
