<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Fischer01" xml:space="preserve">
    <value>[Event "Oklahoma City Open"]
[Site "Oklahoma City open"]
[Date "1956.??.??"]
[Round "1"]
[White "Fischer, R."]
[Black "Popovych, Orest"]
[Result "1-0"]
[ECO "A05"]

1.Nf3 Nf6 2.g3 g6 3.Bg2 Bg7 4.O-O O-O 5.d3 d6 6.Nbd2 e5 7.e4 Ne8 8.c3 f5 9.d4 f4 10.dxe5 dxe5 11.Nc4 Qxd1 12.Rxd1 Nc6 13.gxf4 exf4 14.Nd4 Nxd4 15.cxd4 f3 16.Bf1 Nf6 17.Ne5 Be6 18.d5 Ng4 19.Nd3 Bc8 20.Bf4 Rxf4 21.Nxf4 Be5 22.Nd3 Bxh2+ 23.Kh1 Bd6 24.Bh3 Ne5 25.Nxe5 Bxe5 26.Be6+ Kg7 27.Rd3 Bxe6 28.dxe6 Kf6 29.Rad1 Re8 30.Rxf3+ Kxe6 31.Kg2 a5 32.a4 b6 33.Rd2 h5 34.Rfd3 Rf8 35.Rf3 Bf4 36.Rc2 c5 37.Rb3 Bc7 38.Rd2 Rf4 39.Rg3 Rf6 40.Rf3 Bf4 41.Rd8 g5 42.Rfd3 Rf7 43.Rh8 Ke5 44.f3 h4 45.Rh6 Rf6 46.Rxf6 Kxf6 47.Rd7 Ke5 48.Rb7 Kd4 49.Rxb6 c4 50.Rb5 Bc7 51.Rd5+ Ke3 52.Rxg5 1-0</value>
  </data>
  <data name="Puzzle" xml:space="preserve">
    <value>[Event " White to move."]
[Site "?"]
[Date "1998.??.??"]
[Round "001"]
[White "Chapter 1"]
[Black "?"]
[Result "1-0"]
[EventDate "1998.??.??"]
[Annotator "Magne,Alf"]
[PlyCount "7"]
[SetUp "1"]
[FEN "r1b2rk1/pp1p1pp1/1b1p2B1/n1qQ2p1/8/5N2/P3RPPP/4R1K1 w - - 0 1"]

1.Qxf7+ 
    ( 1.Bxf7+ Kh8 
        ( 1...Kh7 2.Qd3+ Kh8 
            ( 2...Qf5 3.Qxf5+ )
        3.Qg6 )
    2.Qd3 )
1...Rxf7 2.Re8+ Rf8 3.Rxf8+ Kxf8 4.Re8# 1-0</value>
  </data>
  <data name="WithVariations" xml:space="preserve">
    <value>[Event "?"]
[Site "?"]
[Date "????.??.??"]
[Round "?"]
[White "?"]
[Black "?"]
[Result "*"]

1.c4 Nf6 
    ( 1...e5 )
    ( 1...e6 )
    ( 1...c5 )
2.Nc3 *</value>
  </data>
</root>