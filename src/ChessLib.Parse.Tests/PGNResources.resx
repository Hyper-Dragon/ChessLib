<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ColumnStyle" xml:space="preserve">
    <value>[Event "6. Soviet Team Cup"]
[Site "Riga LAT"]
[Date "1968.12.14"]
[Round "4"]
[White "Hermlin, Aarne"]
[Black "Tal, Mikhail"]
[Result "0-1"]
[ECO "A43w"]
[PlyCount "50"]


	   1.	d4 	Nf6 
	   2.	Nf3 	c5 
	   3.	d5 	g6 
	   4.	Nc3 	Bg7 
	   5.	e4 	d6 
	   6.	Bb5+ 	Nbd7 
	   7.	a4 	O-O 
	   8.	O-O 	a6 
	   9.	Be2 	Qc7 
	  10.	h3 	b6 
	  11.	Bf4 	Bb7 
	  12.	Nd2 	e5 
	  13.	dxe6 	fxe6 
	  14.	Nc4 	Nxe4 
	  15.	Bxd6 	Nxd6 
	  16.	Nxd6 	Bc6 
	  17.	Bc4 	Bd4 
	  18.	Bxe6+ 	Kg7 
	  19.	Nde4 	Rad8 
	  20.	Bxd7 	Rxd7 
	  21.	Qe2 	Re7 
	  22.	Qd3 	Qf4 
	  23.	Rae1 	Rfe8 
	  24.	Qf3 	g5 
	  25.	Ne2 	Bxe4 

0-1</value>
  </data>
  <data name="GameWithNAG" xml:space="preserve">
    <value>[Event "exhibition"]
[Site "exhibition"]
[Date "1949.??.??"]
[Round "1"]
[White "Tal, Mikhail"]
[Black "Gulko, Boris F"]
[Result "1-0"]
[ECO "B82"]

1. e4 c5 2. Nf3 d6 3. d4 cxd4 4. Nxd4 Nf6 5. Nc3 e6 6. f4 Nc6 7. Be3 Be7 8. Qf3
a6 $1 9. O-O-O Qc7 { Qc7 is a great move, here.}  10. g4 Nxd4 11. Bxd4 e5 12.
fxe5 dxe5 13. Qg3 Nxg4 14. Be2 Qa5 15. Bxg4 exd4 16. Nd5 Qxa2 17. Qe5 Qa1+ 18.
Kd2 Qa5+ 19. b4 Qd8 20. Rhg1 f6 21. Bh5+ Kf8 22. Rxg7 fxe5 23. Rf7+ Ke8 24.
Rxe7+ Kf8 25. Rf1+ Kg8 26. Rff7  1-0</value>
  </data>
  <data name="GameWithVariation" xml:space="preserve">
    <value>[Event "exhibition"]
[Site "exhibition"]
[Date "1949.??.??"]
[Round "1"]
[White "Tal, Mikhail"]
[Black "Gulko, Boris F"]
[Result "1-0"]
[ECO "B82"]

1. e4 ( 1. c4)1... c5 2. Nf3 d6 3. d4 cxd4 4. Nxd4 Nf6 5. Nc3 e6 6. f4 Nc6 7.
Be3 Be7 8. Qf3 a6 $1 9. O-O-O Qc7 { Qc7 is a great move, here.}  10. g4 Nxd4
11. Bxd4 e5 12. fxe5 dxe5 13. Qg3 Nxg4 14. Be2 Qa5 15. Bxg4 exd4 16. Nd5 Qxa2
17. Qe5 Qa1+ 18. Kd2 Qa5+ 19. b4 Qd8 20. Rhg1 f6 21. Bh5+ Kf8 22. Rxg7 fxe5 23.
Rf7+ Ke8 24. Rxe7+ Kf8 25. Rf1+ Kg8 26. Rff7  1-0</value>
  </data>
  <data name="GameWithVars" xml:space="preserve">
    <value>[Event "2019 US Open"]
[Site "Orlando, FL USA"]
[Date "2019.08.03"]
[Round "1"]
[White "Biernacki, Mark"]
[Black "Yan, Henry"]
[Result "1-0"]
[WhiteElo "2159"]
[BlackElo "1650"]
[ECO "A00v"]
[EventDate "2019.08.04"]
[UTCDate "2019.08.04"]
[UTCTime "16:33:57"]
[Variant "Standard"]
[Opening "Hungarian Opening: Indian Defense"]
[Annotator "https://lichess.org/@/liquormark"]

1.g3 Nf6 2.Bg2 d5 3.Na3 
    {Obviously a bad move, but wanted to make the game interesting.}
3...Bf5 
    ( 3...e5 4.c3 Bxa3 5.Qa4+ {Bishop pair and imbalanced position} )
4.d3 h6 5.c3 c6 6.Nc2 Nbd7 7.Nf3 e6 $2 
    {Black didn't get any piece of the center, which was a bad decision by them...Na3 should be punished!}
8.O-O Bd6 9.Re1 Qc7 10.Nd2 O-O 11.e4 Bh7 
    ( 11...Bg4 12.Bf3 {This was best} )
12.f4 Qb6+ $2 
    {A pointless check, he should have saved the check for later on}
13.Kh1 $2 
    ( 13.Ne3 {self-pinning was best here} )
13...e5 14.f5 
    ( 14.fxe5 Nxe5 15.d4 Nd3 {[%csl Ge1,Gf2]} )
14...Rad8 15.g4 
    {[%cal Gg4g5]}
15...Nc5 16.Bf1 $1 
    {I actually really liked that move, the Bishop did it's job on g2.}
    ( 16.Qe2 $2 Nxd3 17.Qxd3 Nxg4 $13 )
16...dxe4 17.dxe4 Bb8 18.Qf3 Rd7 
    ( 18...Rxd2 )
19.Nc4 Qc7 20.g5 hxg5 21.Bxg5 Nfxe4 
    {Desperation!}
22.Rxe4 Nxe4 23.Qxe4 
    ( 23.Qf4 )
23...f6 24.Bh4 Rfd8 25.N4e3 a5 26.a4 Qb6 27.Bc4+ Kh8 28.b3 Ba7 29.Rg1 Rd2 30.Qg4 R8d7 31.Be6 Re7 32.Rg3 Qc7 
    ( 32...Rxe6 )
    ( 32...Rxc2 33.Nxc2 Qf2 {apparently i really underestimated this! He was low on time so playing fast} )
33.Rh3 Rxe6 
    {(Saw this one coming)}
34.fxe6 Bxc2 35.Bxf6+ Kg8 36.e7 $1 1-0</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="talLarge" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>PGN\talLarge.pgn;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
</root>